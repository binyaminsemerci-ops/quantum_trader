# Copy this to .env and set your OpenAI API key
# OPENAI_API_KEY=sk-...
# Optional: override model and prompt
# OPENAI_MODEL=gpt-4o-code
# OPENAI_PROMPT=Skriv en enkel Python-funksjon som adderer to tall

# === Backend Config ===
PYTHONUNBUFFERED=1

# === Database ===
DB_URL=sqlite:///./trades.db

# === Binance API Keys (sett dine egne ved bruk) ===
BINANCE_API_KEY=dummy
BINANCE_API_SECRET=dummy

# === Risk Management Defaults ===
DEFAULT_BALANCE=10000
DEFAULT_RISK_PERCENT=1.0

# === GHCR / local publish ===
# Copy these into your environment or a local .env when running scripts/local_ci.ps1
GHCR_NAMESPACE=your-org-or-username
GHCR_USERNAME=your-username
GHCR_PAT=ghp_your_personal_access_token

# === Stress Harness / Frontend Docker ===
# Prefer running frontend tests inside Docker (auto on Windows/no node installed)
# STRESS_PREFER_DOCKER=1
# Force rebuild of frontend test image regardless of cache
# DOCKER_FORCE_BUILD=1

# Retention after runs (used by harness --zip-after)
# Keep latest N zip archives (default 5). Set 0 to disable pruning.
# STRESS_KEEP_ZIPS=5
# Keep latest N per-iteration JSON files (disabled by default). Example:
# STRESS_KEEP_ITERS=200
# Emit warning if more than N iteration JSONs removed in a single prune (0=off)
# STRESS_PRUNE_ALERT_THRESHOLD=100
# Optional webhook (Slack/Teams/etc.) to notify when threshold is exceeded
# STRESS_PRUNE_ALERT_WEBHOOK=https://hooks.slack.com/services/...
# Override report output directory (relative paths resolve from repo root)
# STRESS_REPORT_OUTDIR=artifacts/stress

# === Artifact Upload (scripts/stress/upload_artifacts.py) ===
# Choose one provider section and configure credentials below.

# --- AWS S3 ---
# Used by boto3 (SDK) or aws CLI fallback.
# AWS_ACCESS_KEY_ID=AKIA...
# AWS_SECRET_ACCESS_KEY=...
# AWS_DEFAULT_REGION=eu-west-1
# Example dest: s3://my-bucket/path/stress.zip

# --- Google Cloud Storage ---
# Used by google-cloud-storage (SDK) or gsutil CLI fallback.
# Point to a service account JSON file or rely on gcloud auth.
# GOOGLE_APPLICATION_CREDENTIALS=/absolute/path/to/sa.json
# Example dest: gs://my-bucket/path/stress.zip

# --- Azure Blob Storage ---
# SDK requires account URL and either account key or SAS token.
# AZURE_STORAGE_ACCOUNT_URL=https://<account>.blob.core.windows.net
# AZURE_STORAGE_ACCOUNT_KEY=...
# or
# AZURE_STORAGE_SAS_TOKEN=?sv=...
# Example dest (container/blob): mycontainer/stress.zip
