name: Daily frontend audit

on:
  schedule:
    - cron: '0 6 * * *' # daily at 06:00 UTC
  workflow_dispatch:

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 20
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci --no-audit
      - name: Run production audit
        working-directory: frontend
        run: npm audit --production --json > npm-audit-prod.json || true
      - name: Upload audit artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: frontend-audit-prod
          path: frontend/npm-audit-prod.json
          retention-days: 14
      - name: Triage npm audit
        working-directory: frontend
        run: |
          python $GITHUB_WORKSPACE/scripts/tools/npm_audit_triage.py \
            --input npm-audit-prod.json \
            --md-out $GITHUB_WORKSPACE/artifacts/npm-audit-triage.md \
            --json-out $GITHUB_WORKSPACE/artifacts/npm-audit-summary.json || true
      - name: Upload triage artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: frontend-audit-triage
          path: |
            artifacts/npm-audit-triage.md
            artifacts/npm-audit-summary.json
          retention-days: 14
      - name: Create/Update audit issue (optional)
        if: ${{ secrets.AUDIT_CREATE_ISSUES == 'true' }}
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const fs = require('fs');
            const mdPath = `${process.env.GITHUB_WORKSPACE}/artifacts/npm-audit-triage.md`;
            let body = fs.existsSync(mdPath) ? fs.readFileSync(mdPath, 'utf8') : 'No triage content available.';
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security,frontend,automation'
            });
            const title = 'Frontend: npm audit triage';
            let existing = issues.find(i => i.title === title);
            if (existing) {
              await github.rest.issues.update({ owner: context.repo.owner, repo: context.repo.repo, issue_number: existing.number, body });
            } else {
              await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body, labels: ['security','frontend','automation'] });
            }
