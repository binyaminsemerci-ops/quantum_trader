name: Nightly Dev-Deps Check

on:
  schedule:
    - cron: '0 3 * * *' # daily at 03:00 UTC
  workflow_dispatch: {}

jobs:
  check:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: [3.11, 3.12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Diagnostic - pip list (before install)
        shell: bash
        run: |
          python -m pip --version
          python -m pip list --format=freeze | sort > pip-list-before.txt || true
          echo "Wrote pip-list-before.txt"
          head -n 50 pip-list-before.txt || true

      - name: Install runtime requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Diagnostic - pip list (after install)
        shell: bash
        run: |
          python -m pip list --format=freeze | sort > pip-list-after.txt || true
          echo "Wrote pip-list-after.txt"
          head -n 50 pip-list-after.txt || true

      - name: Upload pip-list artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pip-lists-${{ matrix.os }}-${{ matrix.python }}
          path: |
            pip-list-before.txt
            pip-list-after.txt

      - name: Run dev-deps check
        id: devcheck
        shell: bash
        run: |
          python backend/scripts/check_dev_deps_in_runtime.py || true
          if [ -f backend/dev_in_runtime.txt ]; then
            echo "FOUND=$(cat backend/dev_in_runtime.txt)" >> $GITHUB_OUTPUT
          else
            echo "FOUND=" >> $GITHUB_OUTPUT
          fi
      - name: Upload dev_in_runtime artifact
        if: steps.devcheck.outputs.FOUND != ''
        uses: actions/upload-artifact@v4
        with:
          name: dev-in-runtime-${{ matrix.os }}-${{ matrix.python }}
          path: backend/dev_in_runtime.txt

      - name: Create Check Run annotation if offending packages found
        if: steps.devcheck.outputs.FOUND != ''
        uses: actions/github-script@v7
        env:
          FOUND: ${{ steps.devcheck.outputs.FOUND }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const found = process.env.FOUND || ''
            if (!found) return
            const pkgs = found.split(',').map(s => s.trim()).filter(Boolean)
            const annotations = pkgs.slice(0,50).map(pkg => ({
              path: 'backend/dev_in_runtime.txt',
              start_line: 1,
              end_line: 1,
              annotation_level: 'warning',
              message: `Dev-only package installed in runtime: ${pkg}`
            }))
            await github.rest.checks.create({
              ...context.repo,
              name: 'dev-deps-nightly',
              head_sha: process.env.GITHUB_SHA,
              status: 'completed',
              conclusion: 'neutral',
              output: {
                title: 'Dev-only packages detected in runtime (nightly)',
                summary: `Dev-only packages detected: ${found}`,
                annotations,
                details_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/blob/main/backend/README.md`
              }
            })
